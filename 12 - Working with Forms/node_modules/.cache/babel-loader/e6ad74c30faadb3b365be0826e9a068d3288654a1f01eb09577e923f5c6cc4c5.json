{"ast":null,"code":"var _jsxFileName = \"D:\\\\Advance Web Development\\\\Front-end\\\\React - Max Schwazmuller\\\\12 - Working with Forms\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput1 from \"../hooks/use-input1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  // const [enteredFirstName, setEnteredFirstName] = useState(\"\");\n  // const [enteredFirstNameIsTouchd, setEnteredFirstNameIsTouched] = useState(false);\n\n  // const [enteredLastName, setEnteredLastName] = useState(\"\");\n  // const [enteredLastNameIsTouched, setEnteredLastNameIsTouched] =\n  //   useState(false);\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n\n  // const firstNameIsValid = enteredFirstName.trim() !== ''\n  // const firstNameIsInvalid = !firstNameIsValid && enteredFirstNameIsTouchd\n\n  // const lastNameIsValid = enteredLastName.trim() !== ''\n  // const lastNameIsInvalid = !lastNameIsValid && enteredLastNameIsTouched\n\n  // const emailIsValid = enteredEmail.trim().includes('@')\n  // const emailIsInvalid = !emailIsValid && enteredEmailIsTouched\n\n  const isNotEmpty = value => value.trim() !== '';\n  const {\n    value: enteredFirstName,\n    hasError: firstNameHasError,\n    isValid: firstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput1(isNotEmpty);\n  const {\n    value: enteredLastName,\n    hasError: lastNameHasError,\n    isValid: lastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput1(isNotEmpty);\n  const {\n    value: enteredEmail,\n    hasError: emailHasError,\n    isValid: emailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput1(value => value.trim().includes('@'));\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  // const onFirstNameInputChange = (event) => {\n  //   setEnteredFirstName(event.target.value);\n  // };\n  // const onFirstNameInputBlur = () => {\n  //   setEnteredFirstNameIsTouched(true);\n  // };\n\n  // const onLastNameInputChange = (event) => {\n  //   setEnteredLastName(event.target.value);\n  // };\n  // const onLastNameInputBlur = () => {\n  //   setEnteredLastNameIsTouched(true);\n  // };\n\n  // const onEmailInputChange = (event) => {\n  //   setEnteredEmail(event.target.value);\n  // };\n  // const onEmailInputBlur = () => {\n  //   setEnteredEmailIsTouched(true);\n  // };\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n\n    // setEnteredFirstNameIsTouched(true);\n    // setEnteredLastNameIsTouched(true);\n    // setEnteredEmailIsTouched(true);\n\n    if (!firstNameIsValid && !lastNameIsValid && !emailIsValid) {\n      return;\n    }\n    console.log(enteredFirstName, enteredLastName, enteredEmail);\n\n    // setEnteredFirstName(\"\");\n    // setEnteredLastName(\"\");\n    // setEnteredEmail(\"\");\n\n    // setEnteredFirstNameIsTouched(false);\n    // setEnteredLastNameIsTouched(false);\n    // setEnteredEmailIsTouched(false);\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n  const firstNameInputClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredFirstName,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredLastName,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredEmail,\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"pjomgeWmXnhiL+Tna+295dWoaXY=\", false, function () {\n  return [useInput1, useInput1, useInput1];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useState","useInput1","jsxDEV","_jsxDEV","BasicForm","props","_s","isNotEmpty","value","trim","enteredFirstName","hasError","firstNameHasError","isValid","firstNameIsValid","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","enteredLastName","lastNameHasError","lastNameIsValid","lastNameChangeHandler","lastNameBlurHandler","resetLastName","enteredEmail","emailHasError","emailIsValid","emailChangeHandler","emailBlurHandler","resetEmail","includes","formIsValid","onSubmitHandler","event","preventDefault","console","log","firstNameInputClasses","lastNameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["D:/Advance Web Development/Front-end/React - Max Schwazmuller/12 - Working with Forms/src/components/BasicForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput1 from \"../hooks/use-input1\";\n\nconst BasicForm = (props) => {\n  // const [enteredFirstName, setEnteredFirstName] = useState(\"\");\n  // const [enteredFirstNameIsTouchd, setEnteredFirstNameIsTouched] = useState(false);\n\n  // const [enteredLastName, setEnteredLastName] = useState(\"\");\n  // const [enteredLastNameIsTouched, setEnteredLastNameIsTouched] =\n  //   useState(false);\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n\n  // const firstNameIsValid = enteredFirstName.trim() !== ''\n  // const firstNameIsInvalid = !firstNameIsValid && enteredFirstNameIsTouchd\n\n  // const lastNameIsValid = enteredLastName.trim() !== ''\n  // const lastNameIsInvalid = !lastNameIsValid && enteredLastNameIsTouched\n\n  // const emailIsValid = enteredEmail.trim().includes('@')\n  // const emailIsInvalid = !emailIsValid && enteredEmailIsTouched\n\n  const isNotEmpty = value => value.trim() !== ''\n\n  const {\n    value: enteredFirstName,\n    hasError: firstNameHasError,\n    isValid : firstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput1(isNotEmpty);\n\n  const {\n    value : enteredLastName,\n    hasError : lastNameHasError,\n    isValid : lastNameIsValid,\n    valueChangeHandler : lastNameChangeHandler,\n    inputBlurHandler : lastNameBlurHandler,\n    reset : resetLastName,\n  } = useInput1(isNotEmpty);\n\n  const { \n    value : enteredEmail,\n    hasError : emailHasError,\n    isValid : emailIsValid,\n    valueChangeHandler : emailChangeHandler,\n    inputBlurHandler : emailBlurHandler,\n    reset : resetEmail\n  } = useInput1(value => value.trim().includes('@'))\n\n\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  // const onFirstNameInputChange = (event) => {\n  //   setEnteredFirstName(event.target.value);\n  // };\n  // const onFirstNameInputBlur = () => {\n  //   setEnteredFirstNameIsTouched(true);\n  // };\n\n  // const onLastNameInputChange = (event) => {\n  //   setEnteredLastName(event.target.value);\n  // };\n  // const onLastNameInputBlur = () => {\n  //   setEnteredLastNameIsTouched(true);\n  // };\n\n  // const onEmailInputChange = (event) => {\n  //   setEnteredEmail(event.target.value);\n  // };\n  // const onEmailInputBlur = () => {\n  //   setEnteredEmailIsTouched(true);\n  // };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    // setEnteredFirstNameIsTouched(true);\n    // setEnteredLastNameIsTouched(true);\n    // setEnteredEmailIsTouched(true);\n\n    if (!firstNameIsValid && !lastNameIsValid && !emailIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName, enteredLastName, enteredEmail);\n\n    // setEnteredFirstName(\"\");\n    // setEnteredLastName(\"\");\n    // setEnteredEmail(\"\");\n\n    // setEnteredFirstNameIsTouched(false);\n    // setEnteredLastNameIsTouched(false);\n    // setEnteredEmailIsTouched(false);\n\n    resetFirstName()\n    resetLastName()\n    resetEmail()\n  };\n\n  const firstNameInputClasses = firstNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameInputClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailInputClasses = emailHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredFirstName}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && (\n            <p className=\"error-text\">First Name must not be empty</p>\n          )}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredLastName}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameHasError && (\n            <p className=\"error-text\">Last Name must not be empty</p>\n          )}\n        </div>\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredEmail}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n        {emailHasError && (\n          <p className=\"error-text\">Please enter a valid email address.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}