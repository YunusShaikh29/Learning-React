{"ast":null,"code":"var _jsxFileName = \"D:\\\\Advance Web Development\\\\Front-end\\\\React - Max Schwazmuller\\\\06 - useEffect - starting project\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n//AuthContext will be an object which wraps components\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthContext","createContext","isLoggedIn","onLogout","AuthContextProvider","props","_s","setIsLoggedIn","loginHandler","logoutHandler","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Advance Web Development/Front-end/React - Max Schwazmuller/06 - useEffect - starting project/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n    isLoggedIn : false,\r\n    onLogout : () => {}\r\n})\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    const loginHandler = () => {\r\n        setIsLoggedIn(true)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        setIsLoggedIn(false )\r\n    }\r\n\r\n    return <AuthContext.Provider >{props.children}</AuthContext.Provider>\r\n}\r\n\r\n//AuthContext will be an object which wraps components\r\nexport default AuthContext"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAa,CAAC;EACpCC,UAAU,EAAG,KAAK;EAClBC,QAAQ,EAAGA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1C,MAAM,CAACJ,UAAU,EAAEK,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACvBD,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IACxBF,aAAa,CAAC,KAAM,CAAC;EACzB,CAAC;EAED,oBAAOR,OAAA,CAACC,WAAW,CAACU,QAAQ;IAAAC,QAAA,EAAGN,KAAK,CAACM;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AACzE,CAAC;;AAED;AAAAT,EAAA,CAfaF,mBAAmB;AAAAY,EAAA,GAAnBZ,mBAAmB;AAgBhC,eAAeJ,WAAW;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}